# Generated by https://quicktype.io
from datetime import datetime
from typing import Any, List, TypedDict

class Aggregates(TypedDict):
    raw_data: Any
    pass

class Calculations(TypedDict):
    raw_data: Any
    playtime_minutes: int

class Inventory(TypedDict):
    raw_data: Any
    defaults_version: int
    version: int

class Totalcharacterbloodspilt(TypedDict):
    raw_data: Any
    sub_zero: int

class Totalcharacterkameofightswon(TypedDict):
    raw_data: Any
    sektor_kam: int

class AnyClass(TypedDict):
    raw_data: Any
    tutorialbasecompletionpercentage: int
    totalcharacterbloodspilt: Totalcharacterbloodspilt
    totalcharacterfighterfatalities: Totalcharacterbloodspilt
    totalcharacterfighterfightswon: Totalcharacterbloodspilt
    totalcharacterkameofightswon: Totalcharacterkameofightswon
    totalfatalities: int
    totalfighterfatalities: int
    totalplaytime: int
    totalrostercharactersused: Totalcharacterbloodspilt

class Seasonal(TypedDict):
    raw_data: Any
    seasonalbloodspilt: int
    seasonalfighterfatalities: int
    seasonalmostfightersplayed: Totalcharacterbloodspilt
    seasonalmostfighterswon: Totalcharacterbloodspilt
    seasonalmostkameosplayed: Totalcharacterkameofightswon
    seasonalmostkameoswon: Totalcharacterkameofightswon
    seasonaltimeplayed: int

class Totaldifferentfatalities(TypedDict):
    raw_data: Any
    sub_zero_fatality_a: int

class Trophy(TypedDict):
    raw_data: Any
    profilestat9006: int
    fightscompleted: int
    fightswon: int
    profilestat9100: Totalcharacterbloodspilt
    totalbloodspilt: int
    totaldamageperformed: float
    totaldifferentfatalities: Totaldifferentfatalities
    totalkameocharactersused: Totalcharacterkameofightswon

class ProfileStats(TypedDict):
    raw_data: Any
    any: AnyClass
    trophy: Trophy
    seasonal: Seasonal

class DataGame(TypedDict):
    raw_data: Any
    inventory: Inventory
    steam_true_owner: str
    game_edition: str
    region_code: str
    profile_stats: ProfileStats

class Data(TypedDict):
    raw_data: Any
    game: DataGame
    change_count: int

class Stats(TypedDict):
    raw_data: Any
    win: int
    loss: int
    rank: int

class Matches(TypedDict):
    raw_data: Any
    stats_versus_casual: Stats
    stats_koth_casual: Stats
    stats_versus_ranked: Stats
    stats_versus_tournament: Stats

class ServerDataGame(TypedDict):
    raw_data: Any
    last_calendar_entry_viewed_time: datetime
    claimed_wbpn_link_rewards: bool

class ServerData(TypedDict):
    raw_data: Any
    game: ServerDataGame

class Profile(TypedDict):
    raw_data: Any
    id: str
    updated_at: datetime
    account_id: str
    created_at: datetime
    last_login: datetime
    points: None
    data: Data
    server_data: ServerData
    server_owner_data: Aggregates
    inventory: Aggregates
    matches: Matches
    cross_match_results: Aggregates
    notifications: Aggregates
    aggregates: Aggregates
    calculations: Calculations
    files: List[Any]
    user_segments: List[str]
    random_distribution: float
